global:
  # The smarthost and SMTP sender used for mail notifications.
  smtp_smarthost: 'smtp.163.com:25'
  smtp_from: 'huan_ying3@163.com'
  smtp_auth_username: 'huan_ying3@163.com'
  smtp_auth_password: 'email_password'
  # The auth token for Hipchat.
  #hipchat_auth_token: '1234556789'
  # Alternative host for Hipchat.
  #hipchat_url: 'https://hipchat.foobar.org/'

# The directory from which notification templates are read.
templates: 
- '/etc/alertmanager/template/*.tmpl'

# The root route on which each incoming alert enters.
route:
  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  #group_by: ['alertname', 'cluster', 'service']
  group_by: ['Alertname']  

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first 
  # notification.
  group_wait: 30s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 5m

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 5m 

  # A default receiver
  receiver: email-163

# Inhibition rules allow to mute a set of alerts given that another alert is
# firing.
# We use this to mute any warning-level notifications if the same alert is 
# already critical.
#inhibit_rules:
#- source_match:
#    severity: 'critical'
#  target_match:
#    severity: 'warning'
  # Apply inhibition if the alertname is the same.
#  equal: ['alertname', 'cluster', 'service']


receivers:
- name: 'email-163'
  email_configs:
  - to: 'test1@youshehui.com'
  - to: 'test@qq.com'
  - to: 'test2@youshehui.com'
#- name: 'webhook-dingding'
#  webhook_configs:
#  - url: ''
